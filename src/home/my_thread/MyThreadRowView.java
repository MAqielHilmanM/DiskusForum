/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package home.my_thread;

import home.community.*;
import java.awt.Component;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author maqielhm
 */
public class MyThreadRowView extends javax.swing.JPanel implements ListCellRenderer {

    /**
     * Creates new form CommunityRows
     */
    public MyThreadRowView() {
        initComponents();
        setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMyThreadRowCom = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblMyThreadRowTitle = new javax.swing.JLabel();
        spMyThreadRow = new javax.swing.JScrollPane();
        taMyThreadRowBody = new javax.swing.JTextArea();
        lblMyThreadDate = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        lblMyThreadRowCom.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        lblMyThreadRowCom.setText("John Doe");

        jLabel3.setText("Posted at");

        lblMyThreadRowTitle.setFont(new java.awt.Font("DejaVu Sans", 1, 24)); // NOI18N
        lblMyThreadRowTitle.setText("Lorem Ipsum Sim Dolor Amet");

        taMyThreadRowBody.setEditable(false);
        taMyThreadRowBody.setColumns(20);
        taMyThreadRowBody.setLineWrap(true);
        taMyThreadRowBody.setRows(5);
        taMyThreadRowBody.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. \nNam ac tristique nulla. Proin viverra elit quis est \neuismod malesuada. Cras in egestas arcu. . . ");
        taMyThreadRowBody.setWrapStyleWord(true);
        taMyThreadRowBody.setAutoscrolls(false);
        taMyThreadRowBody.setBorder(null);
        taMyThreadRowBody.setOpaque(false);
        spMyThreadRow.setViewportView(taMyThreadRowBody);

        lblMyThreadDate.setText("Thursday, 11 August 2018");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMyThreadRowCom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMyThreadDate)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMyThreadRowTitle)
                        .addGap(0, 86, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(spMyThreadRow, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblMyThreadRowTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spMyThreadRow, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMyThreadDate)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMyThreadRowCom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblMyThreadDate;
    private javax.swing.JLabel lblMyThreadRowCom;
    private javax.swing.JLabel lblMyThreadRowTitle;
    private javax.swing.JScrollPane spMyThreadRow;
    private javax.swing.JTextArea taMyThreadRowBody;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        MyThreadRowModel model = (MyThreadRowModel) value;
        lblMyThreadDate.setText(model.getDate());
        lblMyThreadRowCom.setText(model.getCommunityName());
        lblMyThreadRowTitle.setText(model.getTitle());
        taMyThreadRowBody.setText(model.getBody());
        
        if (isSelected) {
            setBackground(list.getSelectionBackground());
            setForeground(list.getSelectionForeground());
        } else {
            setBackground(list.getBackground());
            setForeground(list.getForeground());
        }
        return this;
    }
}
